// This file was auto-generated by ML.NET Model Builder. 

using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.AspNetCore;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.ML;

namespace CollaborativeFilteringRecipeRecommendations.API
{
    public class Program
    {
        public static void Main(string[] args)
        {
            //Configuration
            WebHost.CreateDefaultBuilder()
                .ConfigureServices(services =>
                {
                    // Register Prediction Engine Pool
                    services
                        .AddPredictionEnginePool<
                            CollaborativeFilteringRecipeRecommendations_API.CollaborativeFilteringRecipeRecommendations.
                            ModelInput,
                            CollaborativeFilteringRecipeRecommendations_API.CollaborativeFilteringRecipeRecommendations.
                            ModelOutput>().FromFile("CollaborativeFilteringRecipeRecommendations.zip");
                })
                .Configure(options =>
                {
                    options.UseRouting();
                    options.UseEndpoints(routes =>
                    {
                        // Define prediction endpoint
                        routes.MapPost("/predict", PredictHandler);
                    });
                })
                .Build()
                .Run();
        }

        private static async Task PredictHandler(HttpContext http)
        {
            // Get PredictionEnginePool service
            var predictionEnginePool = http.RequestServices
                .GetRequiredService<PredictionEnginePool<
                    CollaborativeFilteringRecipeRecommendations_API.CollaborativeFilteringRecipeRecommendations.
                    ModelInput, CollaborativeFilteringRecipeRecommendations_API.
                    CollaborativeFilteringRecipeRecommendations.ModelOutput>>();

            // Deserialize HTTP request JSON body
            var body = http.Request.Body;
            var input = await JsonSerializer
                .DeserializeAsync<CollaborativeFilteringRecipeRecommendations_API.
                    CollaborativeFilteringRecipeRecommendations.ModelInput>(body);

            // Predict
            var prediction = predictionEnginePool.Predict(input);

            // Return prediction as response
            await http.Response.WriteAsJsonAsync(prediction);
        }
    }
}