// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;

namespace CollaborativeFilteringRecommendations
{
    public partial class CollaborativeFilteringRecipeRecommendations
    {
        /// <summary>
        /// model input class for CollaborativeFilteringRecipeRecommendations.
        /// </summary>
        #region model input class
        public class ModelInput
        {
            [ColumnName(@"user_id")]
            public string User_id { get; set; }

            [ColumnName(@"recipe_id")]
            public string Recipe_id { get; set; }

            [ColumnName(@"rating")]
            public float Rating { get; set; }

        }

        #endregion

        /// <summary>
        /// model output class for CollaborativeFilteringRecipeRecommendations.
        /// </summary>
        #region model output class
        public class ModelOutput
        {
            public float Score { get; set; }
        }
        #endregion

        private static string MLNetModelPath = Path.GetFullPath("CollaborativeFilteringRecipeRecommendations.zip");

        /// <summary>
        /// Use this method to predict on <see cref="ModelInput"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static ModelOutput Predict(ModelInput input)
        {
            MLContext mlContext = new MLContext();

            // Load model & create prediction engine
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var modelInputSchema);
            var predEngine = mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);

            ModelOutput result = predEngine.Predict(input);
            return result;
        }
    }
}
